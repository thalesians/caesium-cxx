To run concurrently:

Current program exposes intra transactional concurrency.

CMake >= 3.5
C++11 compatible compiler

Build instructions:

mkdir -p build
cd build
cmake ..
make intra_transac

//single thread
SODIUM_THREADS=1 ./intra_transac

//To loop through
for t in 1 2 4 6 8; do
  echo "Threads=$t"
  SODIUM_THREADS=$t ./intra_transac
done

*Threads active -> how many worker threads actually processed tasks
*Total tasks run_> should be equal to the number of listeners 

Customise in benchmarks/intra_transac.cpp

*M -> number of listeners. Change the M to change how many listener callbacks fire per src.send()
*Task weight(busy()) _> can change the loop count instead busy() function, this increases or decreases per-task CPU work